[gdalmdimtranslate]
 Title = Converts multidimensional data between different formats, and perform subsetting.
 Abstract = gdalmdimtranslate program converts multidimensional raster between different formats, and/or can perform selective conversion of specific arrays and groups, and/or subsetting operations. cf. https://gdal.org/programs/gdalmdimtranslate.html
 processVersion = 1
 storeSupported = true
 statusSupported = true
 serviceType = C
 serviceProvider = mdimtranslate_service.zo
 <DataInputs>
  [if]
   Title = Format/driver name to be attempted to open the input file(s).
   Abstract = It is generally not necessary to specify it, but it can be used to skip automatic driver detection, when it fails to select the appropriate driver. This option can be repeated several times to specify several candidate drivers. Note that it does not force those drivers to open the dataset. In particular, some drivers have requirements on file extensions.
   minOccurs = 0
   maxOccurs = 1
   <LiteralData>
    DataType = string
    AllowedValues=VRT,netCDF,HDF4,GRIB,BAG,HDF5,Zarr
    <Default>
      value = zarr
    </Default>
   </LiteralData>
  [of]
   Title = Select the output format.
   Abstract = This can be a format that supports multidimensional output (such as NetCDF: Network Common Data Form, Multidimensional VRT), or a "classic" 2D formats, if only one single 2D array results of the other specified conversion operations. When this option is not specified, the format is guessed when possible from the extension of the destination filename.
   minOccurs = 0
   maxOccurs = 1
   <LiteralData>
    DataType = string
    AllowedValues=COG,GTiff,MBTiles,VRT,netCDF,HDF4,GRIB,BAG,HDF5,Zarr,
    <Default>
      value = zarr
    </Default>
   </LiteralData>
  [co]
   Title = The creation options
   Abstract = Many formats have one or more optional creation options that can be used to control particulars about the file created. The creation options available vary by format driver, and some simple formats have no creation options at all. A list of options supported for a format can be listed with the --formats command line option but the documentation for the format is the definitive source of information on driver creation options. See Raster drivers format specific documentation for legal creation options for each format. Array-level creation options may be passed by prefixing them with ARRAY:. See GDALGroup::CopyFrom() for further details regarding such options.
   minOccurs = 0
   maxOccurs = 1024
   <LiteralData>
    DataType = string
    <Default />
   </LiteralData>
  [array]
   Title = Instead of converting the whole dataset, select one array, and possibly perform operations on it. This option can be specified several times to operate on different arrays.
   Abstract = <array_spec> may be just an array name, potentially using a fully qualified syntax (/group/subgroup/array_name). Or it can be a combination of options with the syntax: name={src_array_name}[,dstname={dst_array_name}][,resample=yes][,transpose=[{axis1},{axis2},...][,view={view_expr}] 
   minOccurs = 0
   maxOccurs = 1024
   <LiteralData>
    DataType = string
    <Default />
   </LiteralData>
  [group]
   Title = Select one group
   Abstract = Instead of converting the whole dataset, select one group, and possibly perform operations on it. This option can be specified several times to operate on different groups. If only one group is specified, its content will be copied directly to the target root group. If several ones are specified, they are copied under the target root group. <group_spec> may be just a group name, potentially using a fully qualified syntax (/group/subgroup/subsubgroup_name). Or it can be a combination of options with the syntax: name={src_group_name}[,dstname={dst_group_name}][,recursive=no]
   minOccurs = 0
   maxOccurs = 1024
   <LiteralData>
    DataType = string
    <Default />
   </LiteralData>
  [subset]
   Title = Performs a subsetting 
   Abstract = Performs a subsetting (trimming or slicing) operation along a dimension, provided that it is indexed by a 1D variable of numeric or string data type, and whose values are monotically sorted. <subset_spec> follows exactly the OGC WCS 2.0 KVP encoding for subsetting. That is dim_name(min_val,max_val) or dim_name(sliced_val) The first syntax will subset the dimension dim_name to values in the [min_val,max_val] range. The second syntax will slice the dimension dim_name to value sliced_val (and this dimension will be removed from the arrays that reference to it). Using subset is incompatible of specifying a view option in array.
   minOccurs = 0
   maxOccurs = 1024
   <LiteralData>
    DataType = string
    <Default />
   </LiteralData>
  [scaleaxes]
   Title = Applies a integral scale factor to one or several dimensions, that is extract 1 value every N values (without resampling).
   Abstract = <scaleaxes_spec> follows exactly the syntax of the KVP encoding of the SCALEAXES parameter of OGC WCS 2.0 Scaling Extension, but limited to integer scale factors. That is <dim1_name>(<scale_factor>)[,<dim2_name>(<scale_factor>)]... Using -scaleaxes is incompatible of specifying a view option in -array.
   minOccurs = 0
   maxOccurs = 1
   <LiteralData>
    DataType = string
    <Default />
   </LiteralData>
  [oo]
   Title = Source dataset open option (format specific)
   Abstract = Source dataset open option (format specific)
   minOccurs = 0
   maxOccurs = 1024
   <LiteralData>
    DataType = string
    <Default />
   </LiteralData>
  [Input]
   Title = The input data source name
   Abstract = The input data source name to use.
   minOccurs = 1
   maxOccurs = 1
   <LiteralData>
    DataType = string
    <Default />
   </LiteralData>
  [Output]
   Title = The output data source name
   Abstract = The output data source name to use.
   minOccurs = 1
   maxOccurs = 1
   <LiteralData>
    DataType = string
    <Default />
   </LiteralData>
 </DataInputs>
 <DataOutputs>
  [Result]
   Title = The resulting converted file
   Abstract = The file name resulting of the convertion
   <ComplexData>
    <Default>
      mimeType=application/netcdf
    </Default>
    <Default>
      mimeType=image/tiff
    </Default>
    <Default>
      mimeType=application/x-ogc-Â­vrt
    </Default>
   </ComplexData>
 </DataOutputs>  
