apiVersion: skaffold/v4beta9
kind: Config
build:
  # tagPolicy: 
  #   sha256: {}
  artifacts:
    - image: zoodruimage
      context: .
      docker:
        dockerfile: docker/dru/Dockerfile


profiles:

  - name: dru
    deploy:
      helm:
        releases:
          - name: eoap-zoo-project-localstack
            remoteChart: localstack/localstack
            namespace: eoap-zoo-project
            createNamespace: true
            setValues:
              service.type: ClusterIP
              enableStartupScripts: true
              startupScriptContent: |
                #!/bin/bash

                awslocal s3 mb s3://results

          - name: zoo-project-dru
            remoteChart: zoo-project/zoo-project-dru
            namespace: eoap-zoo-project
            createNamespace: true
            version: 0.4.0
            valuesFiles:
            - values.yaml
            setValueTemplates:
              iam.enabled: false
              # EOEPCA cookiecutter
              #cookiecutter.templateUrl: https://github.com/EOEPCA/eoepca-proc-service-template.git
              #cookiecutter.templateBranch: feature/python3.8
              # Standard cookiecutter
              cookiecutter.templateUrl: https://github.com/eoap/zoo-service-template.git
              cookiecutter.templateBranch: feature-secrets-nodeselector-imagepullsecrets
              filter_in.enabled: true
              filter_out.enabled: true
              zoofpm.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zoofpm.image.tag: "{{.IMAGE_TAG_zoodruimage}}"
              zoofpm.image.pullPolicy: IfNotPresent
              zookernel.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zookernel.image.tag: "{{.IMAGE_TAG_zoodruimage}}" 
              zookernel.image.pullPolicy: IfNotPresent

              # Persistence settings (should be same in the original chart)
              persistence.procServicesAccessMode: ReadWriteMany

              # RabbitMQ resource limits
              rabbitmq.resource.limits.memory: 2048Mi

              workflow.additionalInputs:
                s3_bucket: results
                region_name: us-east-1
                aws_secret_access_key: test
                aws_access_key_id: test
                endpoint_url: http://eoap-zoo-project-localstack.eoap-zoo-project.svc.cluster.local

  - name: dru-hostpath
    deploy:
      helm:
        releases:
          - name: eoap-zoo-project-localstack
            remoteChart: localstack/localstack
            namespace: eoap-zoo-project
            createNamespace: true
            setValues:
              service.type: ClusterIP
              enableStartupScripts: true
              startupScriptContent: |
                #!/bin/bash

                awslocal s3 mb s3://results

          - name: zoo-project-dru
            remoteChart: zoo-project/zoo-project-dru
            namespace: eoap-zoo-project
            createNamespace: true
            version: 0.4.0
            valuesFiles:
            - values.yaml
            setValueTemplates:
              iam.enabled: false
              # EOEPCA cookiecutter
              #cookiecutter.templateUrl: https://github.com/EOEPCA/eoepca-proc-service-template.git
              #cookiecutter.templateBranch: feature/python3.8
              # Standard cookiecutter
              cookiecutter.templateUrl: https://github.com/eoap/zoo-service-template.git
              cookiecutter.templateBranch: develop
              filter_in.enabled: true
              filter_out.enabled: true
              zoofpm.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zoofpm.image.tag: "{{.IMAGE_TAG_zoodruimage}}"
              zoofpm.image.pullPolicy: IfNotPresent
              zookernel.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zookernel.image.tag: "{{.IMAGE_TAG_zoodruimage}}" 
              zookernel.image.pullPolicy: IfNotPresent

              # Persistence settings (should be same in the original chart)
              persistence.procServicesAccessMode: ReadWriteMany

              # Kubernetes (arm64) from Docker Desktop specific settings
              workflow.storageClass: hostpath
              persistence.storageClass: hostpath
              persistence.procServicesStorageClass: hostpath
              persistence.tmpStorageClass: hostpath

              # RabbitMQ resource limits
              rabbitmq.resource.limits.memory: 2048Mi

              workflow.additionalInputs:
                s3_bucket: results
                region_name: us-east-1
                aws_secret_access_key: test
                aws_access_key_id: test
                endpoint_url: http://eoap-zoo-project-localstack.eoap-zoo-project.svc.cluster.local

  - name: dru-wes
    deploy:
      helm:
        releases:
          - name: eoap-zoo-project-localstack
            remoteChart: localstack/localstack
            namespace: eoap-zoo-project
            createNamespace: true
            setValues:
              service.type: ClusterIP
              enableStartupScripts: true
              startupScriptContent: |
                #!/bin/bash

                awslocal s3 mb s3://results

          - name: zoo-project-dru
            remoteChart: zoo-project/zoo-project-dru
            namespace: eoap-zoo-project
            createNamespace: true
            version: 0.4.0
            valuesFiles:
            - values.yaml
            setValueTemplates:
              iam.enabled: false
              # WES cookiecutter
              cookiecutter.templateUrl: https://github.com/gfenoy/eoepca-proc-service-template-wes.git
              cookiecutter.templateBranch: develop
              filter_in.enabled: true
              filter_out.enabled: true
              zoofpm.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zoofpm.image.tag: "{{.IMAGE_TAG_zoodruimage}}"
              zoofpm.image.pullPolicy: IfNotPresent
              zookernel.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zookernel.image.tag: "{{.IMAGE_TAG_zoodruimage}}" 
              zookernel.image.pullPolicy: IfNotPresent

              # WES specific
              workflow.inputs.WES_URL: "http://192.168.1.59:8100/ga4gh/wes/v1/"
              workflow.inputs.WES_USER: "test"
              workflow.inputs.WES_PASSWORD: "$$2y$$12$$ci.4U63YX83CwkyUrjqxAucnmi2xXOIlEF6T/KdP9824f1Rf1iyNG"

              # Persistence settings (should be same in the original chart)
              persistence.procServicesAccessMode: ReadWriteMany

              # RabbitMQ resource limits
              rabbitmq.resource.limits.memory: 2048Mi

              workflow.additionalInputs:
                s3_bucket: results
                region_name: us-east-1
                aws_secret_access_key: test
                aws_access_key_id: test
                endpoint_url: http://eoap-zoo-project-localstack.eoap-zoo-project.svc.cluster.local

  - name: dru-wes-hostpath
    deploy:
      helm:
        releases:
          - name: eoap-zoo-project-localstack
            remoteChart: localstack/localstack
            namespace: eoap-zoo-project
            createNamespace: true
            setValues:
              service.type: ClusterIP
              enableStartupScripts: true
              startupScriptContent: |
                #!/bin/bash

                awslocal s3 mb s3://results

          - name: zoo-project-dru
            remoteChart: zoo-project/zoo-project-dru
            namespace: eoap-zoo-project
            createNamespace: true
            version: 0.4.0
            valuesFiles:
            - values.yaml
            setValueTemplates:
              iam.enabled: false
              # WES cookiecutter
              cookiecutter.templateUrl: https://github.com/gfenoy/eoepca-proc-service-template-wes.git
              cookiecutter.templateBranch: develop
              filter_in.enabled: true
              filter_out.enabled: true
              zoofpm.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zoofpm.image.tag: "{{.IMAGE_TAG_zoodruimage}}"
              zoofpm.image.pullPolicy: IfNotPresent
              zookernel.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zookernel.image.tag: "{{.IMAGE_TAG_zoodruimage}}" 
              zookernel.image.pullPolicy: IfNotPresent

              # WES specific
              workflow.inputs.WES_URL: "http://192.168.1.13:8100/ga4gh/wes/v1/"
              workflow.inputs.WES_USER: "test"
              workflow.inputs.WES_PASSWORD: "$$2y$$12$$ci.4U63YX83CwkyUrjqxAucnmi2xXOIlEF6T/KdP9824f1Rf1iyNG"

              # Persistence settings (should be same in the original chart)
              persistence.procServicesAccessMode: ReadWriteMany

              # Kubernetes (arm64) from Docker Desktop specific settings
              workflow.storageClass: hostpath
              persistence.storageClass: hostpath
              persistence.procServicesStorageClass: hostpath
              persistence.tmpStorageClass: hostpath

              # RabbitMQ resource limits
              rabbitmq.resource.limits.memory: 2048Mi

              workflow.additionalInputs:
                s3_bucket: results
                region_name: us-east-1
                aws_secret_access_key: test
                aws_access_key_id: test
                endpoint_url: http://eoap-zoo-project-localstack.eoap-zoo-project.svc.cluster.local

  - name: dru-argo
    deploy:
      helm:
        releases:
          - name: eoap-zoo-project-localstack
            remoteChart: localstack/localstack
            namespace: eoap-zoo-project
            createNamespace: true
            setValues:
              service.type: ClusterIP
              enableStartupScripts: true
              startupScriptContent: |
                #!/bin/bash

                awslocal s3 mb s3://results

          - name: zoo-project-dru
            remoteChart: zoo-project/zoo-project-dru
            namespace: eoap-zoo-project
            createNamespace: true
            version: 0.4.0
            valuesFiles:
            - values.yaml
            setValueTemplates:
              iam.enabled: false
              # Argo cookiecutter
              cookiecutter.templateUrl: https://github.com/EOEPCA/zoo-argo-wf-proc-service-template.git
              cookiecutter.templateBranch: main
              filter_in.enabled: true
              filter_out.enabled: true
              zoofpm.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zoofpm.image.tag: "{{.IMAGE_TAG_zoodruimage}}"
              zoofpm.image.pullPolicy: IfNotPresent
              zookernel.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zookernel.image.tag: "{{.IMAGE_TAG_zoodruimage}}" 
              zookernel.image.pullPolicy: IfNotPresent

              # ARGO specific
              workflow.argo.enabled: true
              workflow.argo.wfToken: "<ARGO_WF_TOKEN>"

              # Persistence settings (should be same in the original chart)
              persistence.procServicesAccessMode: ReadWriteMany

              # RabbitMQ resource limits
              rabbitmq.resource.limits.memory: 2048Mi

              workflow.additionalInputs:
                s3_bucket: results
                region_name: us-east-1
                aws_secret_access_key: test
                aws_access_key_id: test
                endpoint_url: http://eoap-zoo-project-localstack.eoap-zoo-project.svc.cluster.local

  - name: dru-argo-hostpath
    deploy:
      helm:
        releases:
          - name: eoap-zoo-project-localstack
            remoteChart: localstack/localstack
            namespace: eoap-zoo-project
            createNamespace: true
            setValues:
              service.type: ClusterIP
              enableStartupScripts: true
              startupScriptContent: |
                #!/bin/bash

                awslocal s3 mb s3://results

          - name: zoo-project-dru
            remoteChart: zoo-project/zoo-project-dru
            namespace: eoap-zoo-project
            createNamespace: true
            version: 0.4.0
            valuesFiles:
            - values.yaml
            setValueTemplates:
              iam.enabled: false
              # Argo cookiecutter
              cookiecutter.templateUrl: https://github.com/EOEPCA/zoo-argo-wf-proc-service-template.git
              cookiecutter.templateBranch: main
              filter_in.enabled: true
              filter_out.enabled: true
              zoofpm.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zoofpm.image.tag: "{{.IMAGE_TAG_zoodruimage}}"
              zoofpm.image.pullPolicy: IfNotPresent
              zookernel.image.repository: "{{.IMAGE_REPO_zoodruimage}}"
              zookernel.image.tag: "{{.IMAGE_TAG_zoodruimage}}" 
              zookernel.image.pullPolicy: IfNotPresent

              # ARGO specific
              workflow.argo.enabled: true
              workflow.argo.wfToken: "<ARGO_WF_TOKEN>"

              # Persistence settings (should be same in the original chart)
              persistence.procServicesAccessMode: ReadWriteMany

              # Kubernetes (arm64) from Docker Desktop specific settings
              workflow.storageClass: hostpath
              persistence.storageClass: hostpath
              persistence.procServicesStorageClass: hostpath
              persistence.tmpStorageClass: hostpath

              # RabbitMQ resource limits
              rabbitmq.resource.limits.memory: 2048Mi

              workflow.additionalInputs:
                s3_bucket: results
                region_name: us-east-1
                aws_secret_access_key: test
                aws_access_key_id: test
                endpoint_url: http://eoap-zoo-project-localstack.eoap-zoo-project.svc.cluster.local

portForward:
  - resourceType: service
    resourceName: zoo-project-dru-service
    namespace: eoap-zoo-project
    address: localhost
    port: 80
    localPort: 8080
  - resourceType: service
    resourceName: eoap-zoo-project-localstack
    namespace: eoap-zoo-project
    address: localhost
    port: 4566
    localPort: 8022
